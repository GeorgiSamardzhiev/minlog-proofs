(add-pvar-name "A" "B" "C" (make-arity))
(add-pvar-name "d" (make-arity (py "alpha")))
(add-var-name "x" (py "alpha"))

(set-goal (pf "A ord (A -> F)"))
(use "Stab")
(assume "u")
(use "u")
(intro 1)
(assume "a")
(use "u")
(intro 0)
(use "a")
(cdp)

(set-goal (pf "((A -> B) -> A) -> A"))
(use "Stab")
(assume "u")
(use "u")
(assume "v")
(use "v")
(assume "a")
(use "Stab")
(assume "nb")
(use "u")
(assume "w")
(use "a")
(cdp)

(set-goal (pf "(((A -> F) -> F) -> ((B -> F) -> F)) -> (((A -> F) -> F) -> B)"))
(assume "u")
(assume "v")
(use "Stab")
(use "u")
(use "v")
(cdp)

(set-goal (pf "(A -> F) ord (B -> F) -> ((A & B) -> F)"))
(assume "u" "ab")
(elim "u")
(assume "na")
(use "na")
(use "ab")
(assume "nb")
(use "nb")
(use "ab")
(cdp)

(set-goal (pf "ex x (d(x) -> all x d(x))"))
(use "Stab")
(assume "u")
(use "u")
(ex-intro "x")
(assume "v")
(assume "x0")
(use "Stab")
(assume "w")
(use "u")
(ex-intro "x0")
(assume "dx0")
(use "Efq")
(use "w")
(use "dx0")
(cdp)

(set-goal "(A ord B -> C) -> (A -> C) & (B -> C)")
(assume "u")
(split)
(assume "a")
(use "u")
(intro 0)
(use "a")
(assume "b")
(use "u")
(intro 1)
(use "b")
(cdp)
