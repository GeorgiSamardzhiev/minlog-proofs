(add-pvar-name "A" "B" (make-arity))
(add-pvar-name "R" (make-arity (py "alpha")))
(add-var-name "x" (py "alpha"))

(set-goal (pf "((A & B) -> F) -> (A -> F) ord (B -> F)"))
(assume "u")
(use "Stab")
(assume "v")
(use "v")
(intro 0)
(assume "a")
(use "v")
(intro 1)
(assume "b")
(use "u")
(split)
(use "a")
(use "b")
(cdp)

(set-goal (pf "(A -> F) ord (B -> F) -> ((A & B) -> F)"))
(assume "u" "v")
(elim "u")
(assume "na")
(use "na")
(use "v")
(assume "nb")
(use "nb")
(use "v")
(cdp)

(set-goal (pf "((A ord B) -> F) -> (A -> F) & (B -> F)"))
(assume "u")
(split)
(assume "a")
(use "u")
(intro 0)
(use "a")
(assume "b")
(use "u")
(intro 1)
(use "b")
(cdp)

(set-goal (pf "(A -> F) & (B -> F) -> ((A ord B) -> F)"))
(assume "u" "v")
(elim "v")
(use "u")
(use "u")
(cdp)

(set-goal (pf "((all x (R x)) -> F) -> (ex x ((R x) -> F))"))
(assume "u")
(use "Stab")
(assume "v")
(use "u")
(assume "x")
(use "Stab")
(assume "w")
(use "v")
(ex-intro (pt "x"))
(use "w")
(cdp)

(set-goal (pf "(ex x ((R x) -> F)) -> ((all x (R x)) -> F)"))
(assume "u" "v")
(ex-elim "u")
(assume "x")
(assume "nr")
(use "nr")
(use "v" "x")
(cdp)

(set-goal (pf "((ex x (R x)) -> F) -> (all x ((R x) -> F))"))
(assume "u" "x" "r")
(use "u")
(ex-intro (pt "x"))
(use "r")
(cdp)

(set-goal (pf "(all x ((R x) -> F)) -> ((ex x (R x)) -> F)"))
(assume "u" "v")
(ex-elim "v")
(use "u")
(cdp)
